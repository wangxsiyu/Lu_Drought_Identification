plot_byflume(flumes, plt_runoff)
# runoff (check baseflow)
plot_byflume(flumes, plt_runoff)
result
doy = get_dayid(result$month, result$day)
image(x = doy , y = result$year, z = result$obs, log = "y")
doy
result$year
result$obs
heatmap
image(doy , result$year, result$obs, log = "y")
image(doy , result$year, result$obs)
doy = get_dayid(result$month, result$day)
yr = result$year
doys = sort(unique(doy))
yrs = sort(unique(yr))
tmat = matrix(length(yrs), length(doys))
for(di in 1:length(doys)){
for(yi in 1:length(yrs)){
tmat[yi, di] = result$obs[doy == doys[di] & yr == yrs[yi]]
}
}
source("functions_plt.R")
# runoff (check baseflow)
plot_byflume(flumes, plt_runoff)
result = flumes$x7226500
doy = get_dayid(result$month, result$day)
yr = result$year
doys = sort(unique(doy))
yrs = sort(unique(yr))
tmat = matrix(length(yrs), length(doys))
for(di in 1:length(doys)){
for(yi in 1:length(yrs)){
tmat[yi, di] = result$obs[doy == doys[di] & yr == yrs[yi]]
}
}
di
yi
doys
yrs
which(doy == doys[di] & yr == yrs[yi])
tmat[yi, di] = result$obs[doy == doys[di] & yr == yrs[yi]]
doy = get_dayid(result$month, result$day)
yr = result$year
doys = sort(unique(doy))
yrs = sort(unique(yr))
tmat = matrix(NA, length(yrs), length(doys))
for(di in 1:length(doys)){
for(yi in 1:length(yrs)){
tmat[yi, di] = result$obs[doy == doys[di] & yr == yrs[yi]]
}
}
di
yi
size(tmat)
which(doy == doys[di] & yr == yrs[yi])
doy = get_dayid(result$month, result$day)
yr = result$year
doys = sort(unique(doy))
yrs = sort(unique(yr))
tmat = matrix(NA, length(yrs), length(doys))
for(di in 1:length(doys)){
for(yi in 1:length(yrs)){
tmat[yi, di] = mean(result$obs[doy == doys[di] & yr == yrs[yi]])
}
}
image(doy , yr, tmat)
image(x = doy , y = yr, z = tmat)
image.plot(x = doy , y = yr, z = tmat)
image(x = doy , y = yr, z = tmat)
doy
image(tmat)
image(x = doy , y = yr, z = t(tmat))
transmat <- function(xs, ys, zs){
idna = is.na(xs) | is.na(ys) | is.na(zs)
xs = xs[!idna]
ys = ys[!idna]
zs = zs[!idna]
x = unique(xs);
y = unique(ys)
z = matrix(NA, length(x), length(y))
for (xi in 1:length(x)){
for( yi in 1:length(y)){
tid = (xs == x[xi] & ys == y[yi])
if(is.na(sum(tid))){
}else if(sum(tid) == 1){
z[xi,yi] = zs[tid]
}else{
print(sprintf("xi=%d,yi=%d",xi,yi))
}
}
}
out = list(x=sort(x),y=sort(y),z=z)
return(out)
}
doy = get_dayid(result$month, result$day)
tab = transmat(doy, result$year, result$$obs)
tab = transmat(doy, result$year, result$obs)
library(fields)
install.packages('fields.R')
library(fields)
require("fields.R")
install.packages("fields.R")
image(x=tab$x, y = tab$y, z = tab$z, xlab = "",ylab = "")
xs = doy
ys = result$year
zs = result$obs
idna = is.na(xs) | is.na(ys) | is.na(zs)
xs = xs[!idna]
ys = ys[!idna]
zs = zs[!idna]
x = unique(xs);
y = unique(ys)
z = matrix(NA, length(x), length(y))
for (xi in 1:length(x)){
for( yi in 1:length(y)){
tid = (xs == x[xi] & ys == y[yi])
if (sum(tid) == 1){
z[xi,yi] = zs[tid]
}else{
print(sprintf("xi=%d,yi=%d",xi,yi))
}
}
}
xi = 365
yi = 1
tid = (xs == x[xi] & ys == y[yi])
tid
which(tid)
z = matrix(NA, length(x), length(y))
for (xi in 1:length(x)){
for( yi in 1:length(y)){
tid = (xs == x[xi] & ys == y[yi])
if (sum(tid) == 1){
z[xi,yi] = zs[tid]
}else if (sum(tid) >1){
print(sprintf("xi=%d,yi=%d",xi,yi))
}
}
}
transmat <- function(xs, ys, zs){
idna = is.na(xs) | is.na(ys) | is.na(zs)
xs = xs[!idna]
ys = ys[!idna]
zs = zs[!idna]
x = unique(xs);
y = unique(ys)
z = matrix(NA, length(x), length(y))
for (xi in 1:length(x)){
for( yi in 1:length(y)){
tid = (xs == x[xi] & ys == y[yi])
if (sum(tid) == 1){
z[xi,yi] = zs[tid]
}else if (sum(tid) >1){
z[xi,yi] = mean(zs[tid])
}
}
}
out = list(x=sort(x),y=sort(y),z=z)
return(out)
}
doy = get_dayid(result$month, result$day)
tab = transmat(doy, result$year, result$obs)
image(x=tab$x, y = tab$y, z = tab$z, xlab = "",ylab = "")
source("functions_plt.R")
# runoff (check baseflow)
plot_byflume(flumes, plt_runoff)
corv = "cor"
ylm = c(-1, 1.1)
alpha = 0.1
plot_byflume(out_daybydaycor, plt_daybydaycor, list(select = corv, ylm = ylm, alpha = alpha))
source("functions_plt.R")
# runoff (check baseflow)
plot_byflume(flumes, plt_runoff)
source("functions_plt.R")
# runoff (check baseflow)
plot_byflume(flumes, plt_runoff)
td
rg = 0:0.25:1
rg
rg = linspace(0,1,5)
rg
source("functions.R")
# seasonal
out_seasonal = analyzebyflumes_vegperc(flumes, calc_seasonlycor)
out_seasonal$x7226500$vegperc_ndvi_perc_t0c0f0$cor_seasonal
source("functions_plt.R")
plot_byflume(out_seasonal, plt_seasonal)
source("functions.R")
# seasonal
out_seasonal = analyzebyflumes_vegperc(flumes, calc_seasonlycor)
plot_byflume(out_seasonal, plt_seasonal)
# seasonal
out_seasonal = analyzebyflumes_vegperc(flumes, calc_seasonlycor)
td
out = list()
yr = td$year
doy = td$doy
doy = doy/max(doy)
rg = linspace(0,1,5)
rg
ri = 1
id = doy >= rg[ri] & doy < rg[ri+1]
yr[id]
td$veg[id]
td$perc[id]
get_yearlycor(td$veg[id], td$perc[id], yr[id])
for (ri in 1:length(rg)-1){
id = doy >= rg[ri] & doy < rg[ri+1]
out$cor_seasonal[ri] = get_yearlycor(td$veg[id], td$perc[id], yr[id])
}
ri
ri
for (ri in 1:(length(rg)-1)){
id = doy >= rg[ri] & doy < rg[ri+1]
out$cor_seasonal[ri] = get_yearlycor(td$veg[id], td$perc[id], yr[id])
}
ri
id = doy >= rg[ri] & doy < rg[ri+1]
out$cor_seasonal[ri] = get_yearlycor(td$veg[id], td$perc[id], yr[id])
ri =2
id = doy >= rg[ri] & doy < rg[ri+1]
out$cor_seasonal[ri] = get_yearlycor(td$veg[id], td$perc[id], yr[id])
ri = 3
id = doy >= rg[ri] & doy < rg[ri+1]
out$cor_seasonal[ri] = get_yearlycor(td$veg[id], td$perc[id], yr[id])
ri = 4
id = doy >= rg[ri] & doy < rg[ri+1]
out$cor_seasonal[ri] = get_yearlycor(td$veg[id], td$perc[id], yr[id])
out
1:(length(rg)-1
)
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
# seasonal
out_seasonal = analyzebyflumes_vegperc(flumes, calc_seasonlycor)
plot_byflume(out_seasonal, plt_seasonal)
x = flumes$x7226500$obs
x
get_cumulativedays<- function(x){
y = matrix(NaN, length(x),1)
idnan = which(!is.na(x))
y[idnan] = 0
y[idnan[x[idnan]>0]] = 1
count = 0
for (i in 1:length(y)){
if (is.na(y[i]) || y[i] == 0){
count = 0
} else {
count = count + 1
y[i] = count
}
}
y = y[,1]
return(y)
}
cd = get_cumulativedays(x)
cd
cd[length(cd)]
which(diff(c(cd, 0)) < 0)
x[c(id-1)]
id = which(diff(c(cd, 0)) < 0)
x[c(id-1)]
x[c(id)]
x[c(id+1)]
cd = get_cumulativedays(x == 0)
cd
id = which(diff(c(cd, 0)) < 0)
id
x[id]
x[id+1]
cd[id]
cd[id+1]
cd[id]
# analyze flume by flume
source("function_structures.R")
source("functions.R")
# distribution of 0s
out_0s = analyzebyflumes(flumes, calc_0s)
out_0s
flumes$x7226500$resu
result = out_0s$x7226500
result
density(result$len0)
plot(density(result$len0), col = "gray", type = 'l', xlim = xlm, ylim = c(0,1))
plot(density(result$len0), col = "gray", type = 'l')
source("functions_plt.R")
plot_byflume(out_0s, plt_dist0)
source("functions_plt.R")
plot_byflume(out_0s, plt_dist0)
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
# distribution of 0s
out_0s = analyzebyflumes(flumes, calc_0s)
?hist
plot(hist(result$len0, breaks = c(0,20,50,100,200,300,500,1000)), col = "gray", type = 'l')
ht1 = hist(result$len0, breaks = c(0,20,50,100,200,300,500,1000))
plot(ht1$x, ht1$y, col = "gray", type = 'l')
ht1 = hist(result$len0, breaks = c(0,20,50,100,200,300,500,1000))
plot(ht1$x, ht1$y, col = "gray", type = 'l')
ht1 = hist(result$len0, breaks = c(0,20,50,100,200,300,500,1000), display = F)
ht1 = hist(result$len0, breaks = c(0,20,50,100,200,300,500,1000), plot = F)
ht1 = hist(result$len0, breaks = c(0,20,50,100,200,300,500,1000), plot = F)
ht1
plot(ht1$mids, ht1$counts, col = "gray", type = 'l')
ht1 = hist(result$len0, breaks = linspace(0, 500,50), plot = F)
plot(ht1$mids, ht1$counts, col = "gray", type = 'l')
source("functions_plt.R")
plot_byflume(out_0s, plt_dist0)
source("functions.R")
source("functions_plt.R")
plot_byflume(out_0s, plt_dist0)
ht1
source("functions.R")
source("functions_plt.R")
plot_byflume(out_0s, plt_dist0)
source("functions.R")
source("functions_plt.R")
plot_byflume(out_0s, plt_dist0)
source("functions.R")
source("functions_plt.R")
plot_byflume(out_0s, plt_dist0)
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
plot_byflume(out_0s, plt_dist0)
source("functions.R")
source("functions_plt.R")
m
plot_byflume(out_0s, plt_dist0)
thres = linspace(0.05, 0.5, 45)
thres
thres = linspace(0.05, 0.5, 46)
thrse
thres
out = list(thres = thres)
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
# dry days (threshold) vs yearly
out_drydays = analyzebyflumes_vegperc(flumes, calc_drydays)
thres = linspace(0.05, 0.5, 11)
thres
thres = linspace(0.05, 0.5, 10)
thres
source("functions.R")
# dry days (threshold) vs yearly
out_drydays = analyzebyflumes_vegperc(flumes, calc_drydays)
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
# dry days (threshold) vs yearly
out_drydays = analyzebyflumes_vegperc(flumes, calc_drydays)
out_drydays$x7226500$vegperc_ndvi_perc_t0c0f0$thres
out_drydays$x7226500$vegperc_ndvi_perc_t0c0f0$cor_dryday
source("functions_plt.R")
plot_byflume(out_drydays, plt_drydays)
plot_byflume(out_drydays, plt_dryday)
source("functions_plt.R")
plot_byflume(out_drydays, plt_dryday)
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
plot_byflume(out_drydays, plt_dryday)
source("functions_plt.R")
plot_byflume(out_drydays, plt_dryday)
source("functions_plt.R")
plot_byflume(out_drydays, plt_dryday)
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
# dry days (threshold) vs yearly
out_drydays = analyzebyflumes_vegperc(flumes, calc_drydays)
plot_byflume(out_drydays, plt_dryday)
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
# yearly vs startdate
out_yrst = analyzebyflumes_vegperc(flumes, calc_startday_annual)
dfl = flumes$x7226500
tveg = dfl$ndvi
tperc = dfl$perc_t0c0f0
obsnames = c("obs")
td = data.frame(veg = tveg, perc = tperc, obs = dfl[, obsnames])
ymd = c("year", "month", "day")
td = cbind(dfl[, ymd], td)
td
ttd = td
get_yearlycor(ttd$veg, ttd$perc, ttd$year)
lagi = 20
get_year_lag(td,lagi)
get_year_lag <- function(td,lag){
td$doy = td$doy + lag
id = which(td$doy > 365)
td$doy = td$doy - 365
td$yr = td$yr + 1
return(td)
}
get_year_lag(td,lagi)
td
lagi
td$doy = td$doy + lag
id = which(td$doy > 365)
lag = lagi
td$doy = td$doy + lag
td$doy + lag
td$doy
td
td$doy = get_dayid(td$month,td$day)
td$doy = td$doy + lag
id = which(td$doy > 365)
td$doy = td$doy - 365
td$yr = td$yr + 1
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
# yearly vs startdate
out_yrst = analyzebyflumes_vegperc(flumes, calc_startday_annual)
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
# yearly vs startdate
out_yrst = analyzebyflumes_vegperc(flumes, calc_startday_annual)
out_yrst$x7226500$vegperc_ndvi_perc_t0c0f0$startday_annual
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
plot_byflume(out_0s, plt_yrst)
source("functions_plt.R")
plot_byflume(out_drydays, plt_dryday)
plot_byflume(out_0s, plt_yrst)
source("functions_plt.R")
plot_byflume(out_0s, plt_yrst)
result = out_yrst$x7226500
vars = paste("vegperc", vegname, "perc", c("t1c0f1","t0c0f0","t1c1f1"), sep = "_")
vi = 1
tr = result[[vars[vi]]]
tr
tr$startday_annual
plot(tr$startday_annual, type = 'l', xlim = c(0.5, 4.5), ylim = c(-1,1), col = params$colorname[vi])
plot(t(tr$startday_annual), type = 'l', xlim = c(0.5, 4.5), ylim = c(-1,1), col = params$colorname[vi])
plot(t(tr$startday_annual))
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
plot_byflume(out_0s, plt_yrst)
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
plot_byflume(out_0s, plt_yrst)
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
plot_byflume(out_0s, plt_yrst)
result
vegname = "ndvi"
vars = paste("vegperc", vegname, "perc", c("t1c0f1","t0c0f0","t1c1f1"), sep = "_")
nvar = length(vars)
vi = 1
tr = result[[vars[vi]]]$startday_annual
rt
tr
tr = as.numeric(tr)
rt
tr
plot(tr, type = 'l', xlim = c(0.5, 4.5), ylim = c(-1,1), col = params$colorname[vi])
col_t1c0f1 = rgb(0,0,1,0.7)
col_t0c0f0 = rgb(1,0.1,0,0.7)
col_t1c1f1 = rgb(0,1,0,0.7)
colorname = c(col_t1c0f1,col_t0c0f0,col_t1c1f1)
param0 = list(colorname = colorname)
param = modifyList(param0, param)
params = param0
plot(tr, type = 'l', xlim = c(0.5, 4.5), ylim = c(-1,1), col = params$colorname[vi])
par(new = T)
for (vi in 1:nvar){
tr = result[[vars[vi]]]$startday_annual
tr = as.numeric(tr)
plot(tr, type = 'l', xlim = c(0.5, 4.5), ylim = c(-1,1), col = params$colorname[vi])
par(new = T)
}
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
plot_byflume(out_yrst, plt_yrst)
# analyze flume by flume
source("function_structures.R")
source("functions.R")
source("functions_plt.R")
# yearly vs startdate
out_yrst = analyzebyflumes_vegperc(flumes, calc_startday_annual)
plot_byflume(out_yrst, plt_yrst)
source("functions_plt.R")
t
plot_byflume(out_yrst, plt_yrst)
