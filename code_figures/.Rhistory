mtext(side = 1, text = indx_name[idxix], line = 1.8,cex = 0.8)
mtext(side = 2, text = indx_name[idxiy], line = 1.8,cex = 0.8)
mtext(side = 3, text = paste("R =",r,",","P = ",p,sep = ""), line = 0.3, cex = 0.8, font = 2)
box()
}
}
par(oma = c(1,2,0.5,0.5), mar = c(2,2,2,1) )
lime = c(-0.2,1)
for( idxix in 1:5 ){
for(idxiy in 1:5){
xx = t(miu_dpsir[,IDX[idxix,]])[,1:(city_num-1)] # idx_citymean[idxix,]
yy = t(miu_dpsir[,IDX[idxiy,]])[,1:(city_num-1)] # idx_citymean[idxiy,]
r = round(cor(array(xx),array(yy)),2)  #round(cor(xx,yy),2)
p = round(t.test(array(xx),array(yy))$p.value,2)  #round(t.test(xx,yy)$p.value,2)
plot(x = xx,y = yy,xlab = "",ylab = "",main = "",axes = F, xlim = lime, ylim = lime)
axis(side = 1,mgp = c(0.5,0.5,0))
axis(side = 2,las = 1, mgp = c(0.5,0.7,0))
mtext(side = 1, text = indx_name[idxix], line = 1.8,cex = 0.8)
mtext(side = 2, text = indx_name[idxiy], line = 1.8,cex = 0.8)
mtext(side = 3, text = paste("R =",r,",","P = ",p,sep = ""), line = 0.3, cex = 0.8, font = 2)
box()
}
}
par(mfrow = c(5,5))
par(oma = c(1,2,0.5,0.5), mar = c(2,2,2,2) )
lime = c(-0.2,1)
for( idxix in 1:5 ){
for(idxiy in 1:5){
xx = t(miu_dpsir[,IDX[idxix,]])[,1:(city_num-1)] # idx_citymean[idxix,]
yy = t(miu_dpsir[,IDX[idxiy,]])[,1:(city_num-1)] # idx_citymean[idxiy,]
r = round(cor(array(xx),array(yy)),2)  #round(cor(xx,yy),2)
p = round(t.test(array(xx),array(yy))$p.value,2)  #round(t.test(xx,yy)$p.value,2)
plot(x = xx,y = yy,xlab = "",ylab = "",main = "",axes = F, xlim = lime, ylim = lime)
axis(side = 1,mgp = c(0.5,0.5,0))
axis(side = 2,las = 1, mgp = c(0.5,0.7,0))
mtext(side = 1, text = indx_name[idxix], line = 1.5,cex = 0.8)
mtext(side = 2, text = indx_name[idxiy], line = 1.8,cex = 0.8,las = 1)
mtext(side = 3, text = paste("R =",r,",","P = ",p,sep = ""), line = 0.3, cex = 0.8, font = 2)
box()
}
}
par(oma = c(1,2,0.5,0.5), mar = c(2,2,2,1.5) )
lime = c(-0.2,1)
for( idxix in 1:5 ){
for(idxiy in 1:5){
xx = t(miu_dpsir[,IDX[idxix,]])[,1:(city_num-1)] # idx_citymean[idxix,]
yy = t(miu_dpsir[,IDX[idxiy,]])[,1:(city_num-1)] # idx_citymean[idxiy,]
r = round(cor(array(xx),array(yy)),2)  #round(cor(xx,yy),2)
p = round(t.test(array(xx),array(yy))$p.value,2)  #round(t.test(xx,yy)$p.value,2)
plot(x = xx,y = yy,xlab = "",ylab = "",main = "",axes = F, xlim = lime, ylim = lime)
axis(side = 1,mgp = c(0.5,0.5,0))
axis(side = 2,las = 1, mgp = c(0.5,0.7,0))
mtext(side = 1, text = indx_name[idxix], line = 1.5,cex = 0.8)
mtext(side = 2, text = indx_name[idxiy], line = 1.8,cex = 0.8,las = 1)
mtext(side = 3, text = paste("R =",r,",","P = ",p,sep = ""), line = 0.3, cex = 0.8, font = 2)
box()
}
}
par(oma = c(1,2,0.5,0.5), mar = c(2,2,2,1) )
lime = c(-0.2,1)
for( idxix in 1:5 ){
for(idxiy in 1:5){
xx = t(miu_dpsir[,IDX[idxix,]])[,1:(city_num-1)] # idx_citymean[idxix,]
yy = t(miu_dpsir[,IDX[idxiy,]])[,1:(city_num-1)] # idx_citymean[idxiy,]
r = round(cor(array(xx),array(yy)),2)  #round(cor(xx,yy),2)
p = round(t.test(array(xx),array(yy))$p.value,2)  #round(t.test(xx,yy)$p.value,2)
plot(x = xx,y = yy,xlab = "",ylab = "",main = "",axes = F, xlim = lime, ylim = lime)
axis(side = 1,mgp = c(0.5,0.5,0))
axis(side = 2,las = 1, mgp = c(0.5,0.7,0))
mtext(side = 1, text = indx_name[idxix], line = 1.5,cex = 0.8)
mtext(side = 2, text = indx_name[idxiy], line = 2,cex = 0.8,las = 1)
mtext(side = 3, text = paste("R =",r,",","P = ",p,sep = ""), line = 0.3, cex = 0.8, font = 2)
box()
}
}
plot(hist(xx,yy))
xx
yy
class(xx)
plot(hist(array(xx),array(yy)))
hist(xx)
par(oma = c(1,2,0.5,0.5), mar = c(3,2,2,1) )
lime = c(-0.2,1)
for( idxix in 1:5 ){
for(idxiy in 1:5){
if( idxix == idxiy ){
plot(hist(array(xx),array(yy)))
}
xx = t(miu_dpsir[,IDX[idxix,]])[,1:(city_num-1)] # idx_citymean[idxix,]
yy = t(miu_dpsir[,IDX[idxiy,]])[,1:(city_num-1)] # idx_citymean[idxiy,]
r = round(cor(array(xx),array(yy)),2)  #round(cor(xx,yy),2)
p = round(t.test(array(xx),array(yy))$p.value,2)  #round(t.test(xx,yy)$p.value,2)
plot(x = xx,y = yy,xlab = "",ylab = "",main = "",axes = F, xlim = lime, ylim = lime)
axis(side = 1,mgp = c(0.5,0.5,0))
axis(side = 2,las = 1, mgp = c(0.5,0.7,0))
mtext(side = 1, text = indx_name[idxix], line = 1.5,cex = 0.8)
mtext(side = 2, text = indx_name[idxiy], line = 2,cex = 0.8,las = 1)
mtext(side = 3, text = paste("R =",r,",","P = ",p,sep = ""), line = 0.3, cex = 0.8, font = 2)
box()
}
}
plot(hist(array(xx)))
for( idxix in 1:5 ){
for(idxiy in 1:5){
if( idxix == idxiy ){
plot(hist(array(xx)),xlab = "",ylab = "", main = "")
box()
}
xx = t(miu_dpsir[,IDX[idxix,]])[,1:(city_num-1)] # idx_citymean[idxix,]
yy = t(miu_dpsir[,IDX[idxiy,]])[,1:(city_num-1)] # idx_citymean[idxiy,]
r = round(cor(array(xx),array(yy)),2)  #round(cor(xx,yy),2)
p = round(t.test(array(xx),array(yy))$p.value,2)  #round(t.test(xx,yy)$p.value,2)
plot(x = xx,y = yy,xlab = "",ylab = "",main = "",axes = F, xlim = lime, ylim = lime)
axis(side = 1,mgp = c(0.5,0.5,0))
axis(side = 2,las = 1, mgp = c(0.5,0.7,0))
mtext(side = 1, text = indx_name[idxix], line = 1.5,cex = 0.8)
mtext(side = 2, text = indx_name[idxiy], line = 2,cex = 0.8,las = 1)
mtext(side = 3, text = paste("R =",r,",","P = ",p,sep = ""), line = 0.3, cex = 0.8, font = 2)
box()
}
}
par(mfrow = c(5,5))
par(oma = c(1,2,0.5,0.5), mar = c(3,2,2,1) )
lime = c(-0.2,1)
for( idxix in 1:5 ){
for(idxiy in 1:5){
if( idxix == idxiy ){
plot(hist(array(xx)),xlab = "",ylab = "", main = "")
box()
}
xx = t(miu_dpsir[,IDX[idxix,]])[,1:(city_num-1)] # idx_citymean[idxix,]
yy = t(miu_dpsir[,IDX[idxiy,]])[,1:(city_num-1)] # idx_citymean[idxiy,]
r = round(cor(array(xx),array(yy)),2)  #round(cor(xx,yy),2)
p = round(t.test(array(xx),array(yy))$p.value,2)  #round(t.test(xx,yy)$p.value,2)
plot(x = xx,y = yy,xlab = "",ylab = "",main = "",axes = F, xlim = lime, ylim = lime)
axis(side = 1,mgp = c(0.5,0.5,0))
axis(side = 2,las = 1, mgp = c(0.5,0.7,0))
mtext(side = 1, text = indx_name[idxix], line = 1.5,cex = 0.8)
mtext(side = 2, text = indx_name[idxiy], line = 2,cex = 0.8,las = 1)
mtext(side = 3, text = paste("R =",r,",","P = ",p,sep = ""), line = 0.3, cex = 0.8, font = 2)
box()
}
}
par(mfrow = c(5,5))
par(oma = c(1,2,0.5,0.5), mar = c(3,2,2,1) )
lime = c(-0.2,1)
for( idxix in 1:5 ){
for(idxiy in 1:5){
if( idxix == idxiy ){
plot(hist(array(xx)),xlab = "",ylab = "", main = "")
box()
}
xx = t(miu_dpsir[,IDX[idxix,]])[,1:(city_num-1)] # idx_citymean[idxix,]
yy = t(miu_dpsir[,IDX[idxiy,]])[,1:(city_num-1)] # idx_citymean[idxiy,]
r = round(cor(array(xx),array(yy)),2)  #round(cor(xx,yy),2)
p = round(t.test(array(xx),array(yy))$p.value,2)  #round(t.test(xx,yy)$p.value,2)
plot(x = xx,y = yy,xlab = "",ylab = "",main = "",axes = F, xlim = lime, ylim = lime)
axis(side = 1,mgp = c(0.5,0.5,0))
axis(side = 2,las = 1, mgp = c(0.5,0.7,0))
mtext(side = 1, text = indx_name[idxix], line = 1.5,cex = 0.8)
mtext(side = 2, text = indx_name[idxiy], line = 2,cex = 0.8,las = 1)
mtext(side = 3, text = paste("R =",r,",","P = ",p,sep = ""), line = 0.3, cex = 0.8, font = 2)
box()
}
}
par(mfrow = c(5,5))
par(oma = c(1,2,0.5,0.5), mar = c(3,2,2,1) )
lime = c(-0.2,1)
for( idxix in 1:5 ){
for(idxiy in 1:5){
if( idxix == idxiy ){
plot(hist(array(xx)),xlab = "",ylab = "", main = "")
box()
}else{
xx = t(miu_dpsir[,IDX[idxix,]])[,1:(city_num-1)] # idx_citymean[idxix,]
yy = t(miu_dpsir[,IDX[idxiy,]])[,1:(city_num-1)] # idx_citymean[idxiy,]
r = round(cor(array(xx),array(yy)),2)  #round(cor(xx,yy),2)
p = round(t.test(array(xx),array(yy))$p.value,2)  #round(t.test(xx,yy)$p.value,2)
plot(x = xx,y = yy,xlab = "",ylab = "",main = "",axes = F, xlim = lime, ylim = lime)
axis(side = 1,mgp = c(0.5,0.5,0))
axis(side = 2,las = 1, mgp = c(0.5,0.7,0))
mtext(side = 1, text = indx_name[idxix], line = 1.5,cex = 0.8)
mtext(side = 2, text = indx_name[idxiy], line = 2,cex = 0.8,las = 1)
mtext(side = 3, text = paste("R =",r,",","P = ",p,sep = ""), line = 0.3, cex = 0.8, font = 2)
box()
}
}
}
par(mfrow = c(5,5))
par(oma = c(1,2,0.5,0.5), mar = c(3,2,2,1) )
lime = c(-0.2,1)
for( idxix in 1:5 ){
for(idxiy in 1:5){
xx = t(miu_dpsir[,IDX[idxix,]])[,1:(city_num-1)] # idx_citymean[idxix,]
yy = t(miu_dpsir[,IDX[idxiy,]])[,1:(city_num-1)] # idx_citymean[idxiy,]
if( idxix == idxiy ){
plot(hist(array(xx)),xlab = "",ylab = "", main = "")
box()
}else{
r = round(cor(array(xx),array(yy)),2)  #round(cor(xx,yy),2)
p = round(t.test(array(xx),array(yy))$p.value,2)  #round(t.test(xx,yy)$p.value,2)
plot(x = xx,y = yy,xlab = "",ylab = "",main = "",axes = F, xlim = lime, ylim = lime)
axis(side = 1,mgp = c(0.5,0.5,0))
axis(side = 2,las = 1, mgp = c(0.5,0.7,0))
mtext(side = 1, text = indx_name[idxix], line = 1.5,cex = 0.8)
mtext(side = 2, text = indx_name[idxiy], line = 2,cex = 0.8,las = 1)
mtext(side = 3, text = paste("R =",r,",","P = ",p,sep = ""), line = 0.3, cex = 0.8, font = 2)
box()
}
}
}
idxi
idxiy
xx = t(miu_dpsir[,IDX[idxix,]])[,1:(city_num-1)] # idx_citymean[idxix,]
yy = t(miu_dpsir[,IDX[idxiy,]])[,1:(city_num-1)] # idx_citymean[idxiy,]
if( idxix == idxiy ){
plot(hist(array(xx)),xlab = "",ylab = "", main = "")
box()
}else{
r = round(cor(array(xx),array(yy)),2)  #round(cor(xx,yy),2)
p = round(t.test(array(xx),array(yy))$p.value,2)  #round(t.test(xx,yy)$p.value,2)
plot(x = xx,y = yy,xlab = "",ylab = "",main = "",axes = F, xlim = lime, ylim = lime)
axis(side = 1,mgp = c(0.5,0.5,0))
axis(side = 2,las = 1, mgp = c(0.5,0.7,0))
mtext(side = 1, text = indx_name[idxix], line = 1.5,cex = 0.8)
mtext(side = 2, text = indx_name[idxiy], line = 2,cex = 0.8,las = 1)
mtext(side = 3, text = paste("R =",r,",","P = ",p,sep = ""), line = 0.3, cex = 0.8, font = 2)
box()
}
plot(hist(array(xx)))
array(xx)
plot(hist(array(xx)),xlab = "",ylab = "", main = "")
plot(hist(array(xx)),xlab = "",ylab = "", main = "")
par(mfrow = c(5,5))
par(oma = c(1,2,0.5,0.5), mar = c(3,2,2,1) )
lime = c(-0.2,1)
plot(hist(array(xx)),xlab = "",ylab = "", main = "")
a = hist(array(xx))
plot(a)
spgeo
require(raster)
require(MODIS)
require(sp)
require(rgdal)
require(gdalUtils)
funcdir = dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(funcdir)
library(openxlsx)
lon_lat = read.csv("./sanpedro_lon_lat.csv")
Sinugrid_lon_lat = read.csv("./Sinusoidal_grid_lon_lat.csv")
###########################
source("func_getpixel_loc.R")
long = lon_lat$lon
lat = lon_lat$lat
long[which(long == -999 | long == -99)] = NA
lat[which(lat == -999 | long == -99)] = NA
cood_x = cood_y = NULL
i=1
x = long[i]
y = lat[i]
!is.na(x & y)
cood_x[i] = get_latlon2sin(x,y)@coords[,"x"]
cood_y[i] = get_latlon2sin(x,y)@coords[,"y"]
get_latlon2sin(x,y)@coords[,"x"]
get_latlon2sin(x,y)@coords[,"y"]
get_latlon2sin(x,y)@coords
get_latlon2sin(-110.1534,31.72926)@coords
get_latlon2sin(31.72926,-110.1534)@coords
x = c(10007554.68,8895604.157,10007554.68,8895604.157)
y = c(4447802.079,3335851.559,3335851.559,4447802.079)
plot(x = x, y = y)
plot(x = -x, y = y, col = c("red","blue","green","yellow"))
points(-10417882.72,3528136.715, col = "purple", pch = 16)
x = c(-11119505.2,-10007554.68,-11119505.2,-10007554.68)
y = c(4447802.079,3335851.559,3335851.559,4447802.079)
plot(x = x, y = y, col = c("red","blue","green","yellow"))
points(-10417882.72,3528136.715, col = "purple", pch = 16)
points(-10367853.43,3607846.999, col = "pink", pch = 16)
points(-10452887.81,3489300.731, col = "black", pch = 16)
### First transform the original boundary to lat-lon and then to lambert coordinates
WG_bnd_ll              = spTransform( WG_bnd, CRS("+init=epsg:4326") )
WGEW_direc             = "/Users/Mengtian/MENGTIAN/Data_WrfHydro/data/WGEW_channel_link/"#"C:\\Users\\83444\\Google 云端硬盘\\Mengtian\\WRF-Hydro learning\\veriable_learning\\WGEW_channel_link"
WG_bnd                 = readOGR( paste( WGEW_direc, "/boundary", sep = "" ), "boundary" )
### First transform the original boundary to lat-lon and then to lambert coordinates
WG_bnd_ll              = spTransform( WG_bnd, CRS("+init=epsg:4326") )
WG_bnd_ll
text(-10417882.72,3528136.715, col = "purple", pch = 16);text(-10367853.43,3607846.999, col = "pink", pch = 16);text(-10452887.81,3489300.731, col = "black", pch = 16)
text(-10417882.72,3528136.715, col = "purple", text = "f001");text(-10367853.43,3607846.999, col = "pink", text = "sp1");text(-10452887.81,3489300.731, col = "black", text = "sp4")
?text
text(-10417882.72,3528136.715, col = "purple", labels = "f001");text(-10367853.43,3607846.999, col = "pink", labels = "sp1");text(-10452887.81,3489300.731, col = "black", labels = "sp4")
library(rstudioapi)
cd = dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(cd)
# source files
source('./code_format.R')
source('./drought_identification_siyunew.R')
# read runoff data
#d = read.csv('../data/USGSall_WGEW_flume_observations.csv',header=T,stringsAsFactors=FALSE)
d = read.csv("/Users/Mengtian/Mengtian_Project/drought_identification/data/runoff/runoff_raw.csv") #"/Users/Mengtian/MENGTIAN/Lu_DroughtIdentification/data/pieter_newdata/obs_nosmooth.csv")
d = format_csv(d)
smooth = "no_smooth"
if ( smooth == "smooth"){
dd = preprocess(d)
obs = dd
}else if( smooth == "no_smooth"){
obs = d
}
savedir = paste('./results/',smooth,sep = "")
# compute percentiles
tlm_rgday =  c(0,  0,  365, 365, 0,  0,  365, 365)#, 10, 30)
cdpm_rgday = c(0, 365, 365,  0,  0, 365, 365,  0 )#, 10, 30)
fr_option =  c(0,  0,   0,   0,  1,  1,   1,   1 )
# print('tlm')
# for (i in 1:length(tlm_rgday)){
#   d_tlm = for_allflumes(d, tlm, list(tlm_rgday = tlm_rgday[i]))
#   write.csv(d_tlm, file = sprintf('%s/perc_tlm%d.csv',  savedir, tlm_rgday[i]))
# }
# print('cdpm')
# for (j in 1:length(cdpm_rgday)){
#   d_cdpm = for_allflumes(d, cdpm, list(cdpm_rgday = cdpm_rgday[j]))
#   write.csv(d_tlm, file = sprintf('%s/perc_cdpm%d.csv',  savedir, cdpm_rgday[j]))
# }
print('comb')
isquant = 0
for (i in 1:length(tlm_rgday)){
print(sprintf('loop %d', i))
d_comb = for_allflumes(isquant, obs, comb, list(tlm_rgday = tlm_rgday[i]),
list(cdpm_rgday = cdpm_rgday[i], tlm_rgday = tlm_rgday[i], fr_option = fr_option[i]))
write.csv(d_comb, file = sprintf('%s/perc_T%d_C%d_fr%d_1912_2020.csv',  savedir, -(tlm_rgday[i]/365-1), -(cdpm_rgday[i]/365-1), fr_option[i]))
}
isquant = 1
for (i in 1:length(tlm_rgday)){
print(sprintf('loop %d', i))
d_comb = for_allflumes(isquant, obs, comb, list(tlm_rgday = tlm_rgday[i]),
list(cdpm_rgday = cdpm_rgday[i], tlm_rgday = tlm_rgday[i], fr_option = fr_option[i]))
write.csv(d_comb, file = sprintf('%s/quant_T%d_C%d_fr%d_1912_2020.csv',  savedir, -(tlm_rgday[i]/365-1), -(cdpm_rgday[i]/365-1), fr_option[i]))
}
isquant = 2
for (i in 1:length(tlm_rgday)){
print(sprintf('loop %d', i))
d_comb = for_allflumes(isquant, obs, comb, list(tlm_rgday = tlm_rgday[i]),
list(cdpm_rgday = cdpm_rgday[i], tlm_rgday = tlm_rgday[i], fr_option = fr_option[i]))
write.csv(d_comb, file = sprintf('%s/fr_T%d_C%d_fr%d_1912_2020.csv',  savedir, -(tlm_rgday[i]/365-1), -(cdpm_rgday[i]/365-1), fr_option[i]))
}
FLUMES_WGEW_ll
WGEW_direc             = "/Users/Mengtian/MENGTIAN/Data_WrfHydro/data/WGEW_channel_link" #"C:\\Users\\83444\\Google ?ƶ?Ӳ??\\Mengtian\\WRF-Hydro learning\\veriable_learning\\WGEW_channel_link"
WG_bnd                 = readOGR( paste( WGEW_direc, "/boundary", sep = "" ), "boundary" )
WG_bnd
WG_bnd@data
WG_bnd@polygons
WG_bnd@plotOrder
WG_bnd@bbox
library(rstudioapi)
funcdir = dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(funcdir)
datadir = "../../data"
source('loaddata.R')
#data = loaddata(datadir);
data = loaddata_h8v5(datadir)
library(rstudioapi)
funcdir = dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(funcdir)
datadir = "../../data"
source('loaddata.R')
data = loaddata_h8v5(datadir)
fr_nonan = NULL
for( fli in 1:length(flname)){
#  for( i in 1:length(year) ){
#    idx_y = which(obs$year == year[i])
re = obs[,flname[fli]]
fr_nonan[i] = length(which(!is.na(re)))/365
#  }
}
####### data length
obs = data$obs
flname = colnames(obs)
year = unique(obs$year)
fr_nonan = NULL
for( fli in 1:length(flname)){
#  for( i in 1:length(year) ){
#    idx_y = which(obs$year == year[i])
re = obs[,flname[fli]]
fr_nonan[i] = length(which(!is.na(re)))/365
#  }
}
fr_nonan
flname
flname = setdiff(colnames(obs),c("year","month","day","X"))
year = unique(obs$year)
fr_nonan = NULL
for( fli in 1:length(flname)){
#  for( i in 1:length(year) ){
#    idx_y = which(obs$year == year[i])
re = obs[,flname[fli]]
fr_nonan[i] = length(which(!is.na(re)))/365
#  }
}
fr_nonan
for( fli in 1:length(flname)){
#  for( i in 1:length(year) ){
#    idx_y = which(obs$year == year[i])
re = obs[,flname[fli]]
fr_nonan[fli] = length(which(!is.na(re)))/365
#  }
}
fr_nonan
names(fl_nonan) = flname
names(fr_nonan) = flname
fr_nonan
i=1
tobs = data[["obs"]][,flname]
tveg = data[[vegname[i]]][, flname_veg]
vegname = c("ndvi","evi","lai")
tveg = data[[vegname[i]]][, flname_veg]
if (is.null(flname_veg)){
flname_veg = flname
}
flname_veg = NULL
if (is.null(flname_veg)){
flname_veg = flname
}
tveg = data[[vegname[i]]][, flname_veg]
a = !is.na(tobs) & !is.na(tveg)
a
flname = "f001"
tobs = data[["obs"]][,flname]
tveg = data[[vegname[i]]][, flname_veg]
flname_veg
flname_veg = flname
tobs = data[["obs"]][,flname]
tveg = data[[vegname[i]]][, flname_veg]
a = !is.na(tobs) & !is.na(tveg)
a
sum(a)
length(which(a))
flname = setdiff(colnames(obs),c("year","month","day","X"))
fl_non = NULL
for( fli in 1:length(flname)){
sum_nontobs = NULL
for (i in 1:length(vegname)){
tobs = data[["obs"]][,flname[fli]]
tveg = data[[vegname[i]]][,flname[fli]]
a = !is.na(tobs) & !is.na(tveg)
sum_nontobs[i] = sum(a)
}
names(sum_nontobs) = vegname
fl_non = rbind(fl_non,sum_nontobs)
}
fl_non
rownames(fl_non) = flname
fl_non
re = fl_non
ymin = min(re)
ymax = max(re)
plot(re[1,], type = "o", col = "red", ylim = c(ymin,ymax), axes = F, pch = 16)
re
re[1,]
ymin = min(re)
ymax = max(re)
plot(re[,1], type = "o", col = "red", ylim = c(ymin,ymax), axes = F, pch = 16)
lines(re[,2], type = "o", col = "blue", pch = 16)
lines(re[,3], type = "o", col = "green", pch = 16)
plot(re[,1], type = "o", col = "red", ylim = c(ymin,ymax), axes = F, pch = 16)
lines(re[,2], type = "o", col = "blue", pch = 16, lty = 2)
lines(re[,3], type = "o", col = "green", pch = 16)
box()
axis(side = 1, at = 1:length(flname), labels = F)
text(x = 1:length(flname),
y = par("usr")[3]-0.03,
labels = flname,
xpd = NA,
## Rotate the labels by 35 degrees.
srt = 30,
adj = 1,
cex = 1)
axis(side = 2, las = 1)
flname
####### data length
obs = data$obs
flname = area$flume
area$flume
####### data length
obs = data$obs
area = read.xlsx(paste(datadir,"sanpedro_area.xlsx",sep = "/"))
flname = area$flume
year = unique(obs$year)
fr_nonan = NULL
for( fli in 1:length(flname)){
#  for( i in 1:length(year) ){
#    idx_y = which(obs$year == year[i])
re = obs[,flname[fli]]
fr_nonan[fli] = length(which(!is.na(re)))/365
#  }
}
names(fr_nonan) = flname
fr_nonan
vegname = c("ndvi","evi","lai")
fl_non = NULL
for( fli in 1:length(flname)){
sum_nontobs = NULL
for (i in 1:length(vegname)){
tobs = data[["obs"]][,flname[fli]]
tveg = data[[vegname[i]]][,flname[fli]]
a = !is.na(tobs) & !is.na(tveg)
sum_nontobs[i] = sum(a)
}
names(sum_nontobs) = vegname
fl_non = rbind(fl_non,sum_nontobs)
}
rownames(fl_non) = flname
fl_non
plt_multi_fl_fac(fl_non,area$flume)
